basePath: /
definitions:
  dto.BudgetDTO:
    properties:
      amount:
        type: number
      description:
        type: string
      eventID:
        type: integer
      id:
        type: integer
    type: object
  dto.CalendarResponseDTO:
    properties:
      endDate:
        type: string
      eventType:
        type: string
      location:
        type: string
      name:
        type: string
      startDate:
        type: string
    type: object
  dto.EventCreateDTO:
    properties:
      created_by_user_id:
        type: string
      end_date:
        type: string
      event_plan_id:
        type: integer
      event_status_id:
        type: integer
      event_strategy_id:
        type: integer
      event_type_id:
        type: integer
      event_type_status_id:
        description: Foreign key
        type: integer
      has_budget:
        type: boolean
      location:
        type: string
      methodology:
        type: string
      monitoring:
        type: string
      name:
        type: string
      objective:
        type: string
      rationale:
        type: string
      responsible_user_ids:
        description: Many-to-many relationships
        items:
          type: string
        type: array
      speaker_ids:
        items:
          type: integer
        type: array
      start_date:
        type: string
      year:
        type: integer
    type: object
  dto.EventResponseDTO:
    properties:
      created_by_user_id:
        type: string
      end_date:
        type: string
      event_id:
        type: integer
      event_plan_id:
        type: integer
      event_status_id:
        type: integer
      event_strategy_id:
        type: integer
      event_type_id:
        type: integer
      event_type_status_id:
        description: Foreign key
        type: integer
      firstName:
        type: string
      goal:
        type: string
      has_budget:
        type: boolean
      lastname:
        type: string
      location:
        type: string
      methodology:
        type: string
      monitoring:
        type: string
      name:
        type: string
      objective:
        type: string
      plan:
        type: string
      rationale:
        type: string
      responsible_users:
        description: Many-to-many relationships
        items:
          $ref: '#/definitions/dto.UserResponseDTO'
        type: array
      speakers:
        items:
          $ref: '#/definitions/dto.SpeakerDTO'
        type: array
      start_date:
        type: string
      status:
        type: string
      strategy:
        type: string
      tactic:
        type: string
      type:
        type: string
      typeStatus:
        type: string
      workPlan:
        type: string
      year:
        type: integer
    type: object
  dto.EventStatusUpdateDTO:
    properties:
      event_status_id:
        type: integer
    type: object
  dto.EventStrategyResponseDTO:
    properties:
      event_strategy_id:
        type: integer
      goal:
        type: string
      strategy:
        type: string
      tactic:
        type: string
    type: object
  dto.NotifyResponseDTO:
    properties:
      active:
        type: boolean
      event_id:
        type: integer
      id:
        type: integer
      user_id:
        type: string
    type: object
  dto.SpeakerDTO:
    properties:
      description:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      speaker_id:
        type: integer
    type: object
  dto.StrategyResponseDTO:
    properties:
      strategy:
        type: string
      strategy_id:
        type: integer
    type: object
  dto.UserChangePasswordDTO:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  dto.UserRegisterDTO:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      lastname:
        type: string
      password:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
      user_role_id:
        description: Foreign key
        type: integer
      user_status_id:
        type: integer
    type: object
  dto.UserResponseDTO:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      user_id:
        type: string
      userRole:
        $ref: '#/definitions/dto.UserRoleDTO'
      userStatus:
        $ref: '#/definitions/dto.UserStatusDTO'
    type: object
  dto.UserRoleDTO:
    properties:
      role:
        type: string
      user_role_id:
        type: integer
    type: object
  dto.UserStatusDTO:
    properties:
      status:
        type: string
      user_status_id:
        type: integer
    type: object
  dto.UserUpdateUserRoleDTO:
    properties:
      user_role_id:
        type: integer
    type: object
  dto.UserUpdateUserStatusDTO:
    properties:
      user_status_id:
        type: integer
    type: object
  entities.EventPlan:
    properties:
      event_plan_id:
        type: integer
      work:
        type: string
      work_plane:
        type: string
    type: object
  entities.EventStatus:
    properties:
      event_status_id:
        type: integer
      status:
        type: string
    type: object
  entities.EventType:
    properties:
      event_type_id:
        type: integer
      type:
        type: string
    type: object
  entities.EventTypeStatus:
    properties:
      event_type_status_id:
        type: integer
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a ComSci Event API.
  title: ComSci Event API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user by their email and password, and returns a
        JWT token upon successful authentication.
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Login successful with JWT token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request due to invalid credentials
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized - only users with status_id = 2 can login
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - User
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logs out the user by clearing their JWT cookie.
      produces:
      - application/json
      responses:
        "200":
          description: User logged out successfully
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: User logout
      tags:
      - User
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user by providing an email, password, and optional
        first and last names, as well as user role ID.
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserRegisterDTO'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully created
          schema:
            $ref: '#/definitions/dto.UserRegisterDTO'
        "400":
          description: Bad request due to invalid or missing input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - User
  /budget:
    post:
      consumes:
      - application/json
      description: Create a new Budget with the provided details
      parameters:
      - description: Budget object
        in: body
        name: Budget
        required: true
        schema:
          $ref: '#/definitions/dto.BudgetDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new Budget
      tags:
      - Budget
  /budget/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Budget by ID
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a Budget
      tags:
      - Budget
    get:
      consumes:
      - application/json
      description: Retrieve a Budget by ID
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BudgetDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a Budget by ID
      tags:
      - Budget
  /budgets:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all Budgets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.BudgetDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all Budgets
      tags:
      - Budget
  /budgets/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing Budget by ID
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Budget object
        in: body
        name: Budget
        required: true
        schema:
          $ref: '#/definitions/dto.BudgetDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an existing Budget
      tags:
      - Budget
  /event:
    post:
      consumes:
      - application/json
      description: Create a new event in the system
      parameters:
      - description: Event information
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/dto.EventCreateDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created event
          schema:
            $ref: '#/definitions/dto.EventResponseDTO'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new event
      tags:
      - Event
  /event-strategies:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all event strategies
      produces:
      - application/json
      responses:
        "200":
          description: List of all event strategies
          schema:
            items:
              $ref: '#/definitions/dto.EventStrategyResponseDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all event strategies
      tags:
      - Event Strategy
  /event-strategy/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve an event strategy by its unique ID
      parameters:
      - description: Event Strategy ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved event strategy
          schema:
            $ref: '#/definitions/dto.EventStrategyResponseDTO'
        "400":
          description: Invalid ID format
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Event strategy not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get an event strategy by ID
      tags:
      - Event Strategy
  /event/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an event from the system
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted event
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Event not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Delete an event
      tags:
      - Event
    get:
      consumes:
      - application/json
      description: Retrieve an event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved event
          schema:
            $ref: '#/definitions/dto.EventResponseDTO'
        "404":
          description: Event not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get event by ID
      tags:
      - Event
    put:
      consumes:
      - application/json
      description: Update an existing event in the system
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated event information
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/dto.EventCreateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated event
          schema:
            $ref: '#/definitions/dto.EventResponseDTO'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Event not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an event
      tags:
      - Event
  /event/{id}/status:
    put:
      consumes:
      - application/json
      description: Update only the status of an existing event, if status is 4, notify
        all users
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: New event status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/dto.EventStatusUpdateDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated event status
          schema:
            $ref: '#/definitions/dto.EventResponseDTO'
        "400":
          description: Bad request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Event not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update event status
      tags:
      - Event
  /events:
    get:
      consumes:
      - application/json
      description: Retrieve all events from the system
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all events
          schema:
            items:
              $ref: '#/definitions/dto.EventResponseDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all events
      tags:
      - Event
  /events/calendar:
    get:
      consumes:
      - application/json
      description: Retrieve all events and return them ordered by start date
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all calendar events
          schema:
            items:
              $ref: '#/definitions/dto.CalendarResponseDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all calendar events
      tags:
      - Calendar
  /events/plans:
    get:
      consumes:
      - application/json
      description: Retrieve all event plans from the system
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all event plans
          schema:
            items:
              $ref: '#/definitions/entities.EventPlan'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all event plans
      tags:
      - Event
  /events/status:
    get:
      consumes:
      - application/json
      description: Retrieve all event status from the system
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all event status
          schema:
            items:
              $ref: '#/definitions/entities.EventStatus'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all event status
      tags:
      - Event
  /events/types:
    get:
      consumes:
      - application/json
      description: Retrieve all event types from the system
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all event types
          schema:
            items:
              $ref: '#/definitions/entities.EventType'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all event types
      tags:
      - Event
  /events/types/status:
    get:
      consumes:
      - application/json
      description: Retrieve all event type status from the system
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved all event type status
          schema:
            items:
              $ref: '#/definitions/entities.EventTypeStatus'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Get all event type status
      tags:
      - Event
  /notification/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a notification by its ID
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a notification
      tags:
      - Notification
  /notification/{id}/inactive:
    patch:
      consumes:
      - application/json
      description: Deactivate a notification by setting its active status to false
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Deactivate a notification
      tags:
      - Notification
  /notification/user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve all notifications for a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.NotifyResponseDTO'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get notifications by user ID
      tags:
      - Notification
  /speaker:
    post:
      consumes:
      - application/json
      description: Creates a new speaker by providing the speaker's first name, last
        name, and description
      parameters:
      - description: Speaker details
        in: body
        name: speaker
        required: true
        schema:
          $ref: '#/definitions/dto.SpeakerDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Speaker created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new Speaker
      tags:
      - Speaker
  /speaker/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a speaker by their unique speaker ID
      parameters:
      - description: Speaker ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Speaker deleted successfully
        "400":
          description: Invalid speaker ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a speaker
      tags:
      - Speaker
    get:
      consumes:
      - application/json
      description: Retrieve a speaker's details by their unique speaker ID
      parameters:
      - description: Speaker ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Speaker details retrieved successfully
          schema:
            $ref: '#/definitions/dto.SpeakerDTO'
        "400":
          description: Invalid ID format
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Speaker not found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a Speaker by ID
      tags:
      - Speaker
    put:
      consumes:
      - application/json
      description: Update a speaker's details (first name, last name, description)
        by their unique speaker ID
      parameters:
      - description: Speaker ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated speaker details
        in: body
        name: speaker
        required: true
        schema:
          $ref: '#/definitions/dto.SpeakerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Speaker updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or speaker ID
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an existing Speaker
      tags:
      - Speaker
  /speakers:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all speakers
      produces:
      - application/json
      responses:
        "200":
          description: List of all speakers
          schema:
            items:
              $ref: '#/definitions/dto.SpeakerDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all Speakers
      tags:
      - Speaker
  /strategies:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all strategies
      produces:
      - application/json
      responses:
        "200":
          description: List of all strategies
          schema:
            items:
              $ref: '#/definitions/dto.StrategyResponseDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all strategies
      tags:
      - Strategy
  /strategy/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a strategy by its unique ID from the database
      parameters:
      - description: Strategy ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved strategy
          schema:
            $ref: '#/definitions/dto.StrategyResponseDTO'
        "400":
          description: Invalid ID format
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Strategy not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a strategy by ID
      tags:
      - Strategy
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a user from the system using their unique ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: User successfully deleted
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Fetches the user details based on their unique user ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details retrieved successfully
          schema:
            $ref: '#/definitions/dto.UserResponseDTO'
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Retrieve a user by ID
      tags:
      - User
  /user/{id}/change-password:
    put:
      consumes:
      - application/json
      description: Allows a user to change their password after verifying the old
        password.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Old and new password
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/dto.UserChangePasswordDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Password successfully changed
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad request due to invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Change user password
      tags:
      - User
  /user/{id}/role:
    put:
      consumes:
      - application/json
      description: Updates the role of a user by their unique ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: New user role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateUserRoleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: User role updated successfully
          schema:
            $ref: '#/definitions/dto.UserResponseDTO'
        "400":
          description: Bad request due to invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user role
      tags:
      - User
  /user/{id}/status:
    put:
      consumes:
      - application/json
      description: Changes the user status (e.g., active, inactive) based on their
        ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: New user status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/dto.UserUpdateUserStatusDTO'
      produces:
      - application/json
      responses:
        "200":
          description: User status updated successfully
          schema:
            $ref: '#/definitions/dto.UserResponseDTO'
        "400":
          description: Bad request due to invalid input
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update user status
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      description: Fetches a list of all registered users with their details.
      produces:
      - application/json
      responses:
        "200":
          description: List of users retrieved successfully
          schema:
            items:
              $ref: '#/definitions/dto.UserResponseDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Retrieve a list of all users
      tags:
      - User
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
