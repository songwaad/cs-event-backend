basePath: /
definitions:
  entities.CalendarResponse:
    properties:
      endDate:
        type: string
      eventType:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      startDate:
        type: string
    type: object
  entities.Event:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      deletedAt:
        type: string
      eventDetails:
        $ref: '#/definitions/entities.EventDetails'
      eventDetailsID:
        type: integer
      eventStatus:
        $ref: '#/definitions/entities.EventStatus'
      eventStatusID:
        type: integer
      id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/entities.User'
      year:
        type: integer
    type: object
  entities.EventDetails:
    properties:
      deleteAt:
        type: string
      end_date:
        type: string
      eventPlane:
        $ref: '#/definitions/entities.EventPlane'
      eventPlaneID:
        type: integer
      eventResult:
        $ref: '#/definitions/entities.EventResult'
      eventResultID:
        type: integer
      eventStrategy:
        $ref: '#/definitions/entities.EventStrategy'
      eventStrategyID:
        type: integer
      eventType:
        $ref: '#/definitions/entities.EventType'
      eventTypeID:
        type: integer
      eventTypeStatus:
        $ref: '#/definitions/entities.EventTypeStatus'
      eventTypeStatusID:
        type: integer
      has_budget:
        type: boolean
      id:
        type: integer
      instructor:
        items:
          $ref: '#/definitions/entities.Instructor'
        type: array
      location:
        type: string
      methodology:
        type: string
      monitoring:
        type: string
      name:
        type: string
      objective:
        type: string
      rationale:
        type: string
      responsibleUsers:
        items:
          $ref: '#/definitions/entities.User'
        type: array
      start_date:
        type: string
    type: object
  entities.EventPlane:
    properties:
      id:
        type: integer
      work:
        type: string
      work_plane:
        type: string
    type: object
  entities.EventResult:
    properties:
      deletedAt:
        type: string
      id:
        type: integer
      product:
        type: string
      productIndicators:
        type: string
      productTarget:
        type: string
      result:
        type: string
      resultIndicators:
        type: string
      resultTarget:
        type: string
    type: object
  entities.EventStatus:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  entities.EventStrategy:
    properties:
      goal:
        type: string
      id:
        type: integer
      strategy:
        $ref: '#/definitions/entities.Strategy'
      strategyID:
        type: integer
      tactic:
        type: string
    type: object
  entities.EventType:
    properties:
      id:
        type: integer
      type:
        type: string
    type: object
  entities.EventTypeStatus:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  entities.Instructor:
    properties:
      created_at:
        type: string
      deleteAt:
        type: string
      description:
        type: string
      eventDetails:
        items:
          $ref: '#/definitions/entities.EventDetails'
        type: array
      firstname:
        type: string
      id:
        type: integer
      lastname:
        type: string
      updated_at:
        type: string
    type: object
  entities.Notification:
    properties:
      active:
        type: boolean
      eventDetails:
        $ref: '#/definitions/entities.EventDetails'
      eventDetailsID:
        type: integer
      id:
        type: integer
      user:
        $ref: '#/definitions/entities.User'
      userId:
        type: string
    type: object
  entities.Strategy:
    properties:
      id:
        type: integer
      strategy:
        type: string
    type: object
  entities.User:
    properties:
      createdAt:
        type: string
      deleteAt:
        type: string
      email:
        type: string
      eventDetails:
        items:
          $ref: '#/definitions/entities.EventDetails'
        type: array
      firstName:
        type: string
      id:
        type: string
      lastname:
        type: string
      password:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      userRole:
        $ref: '#/definitions/entities.UserRole'
      userRoleID:
        type: integer
      userStatus:
        $ref: '#/definitions/entities.UserStatus'
      userStatusID:
        type: integer
    type: object
  entities.UserRole:
    properties:
      id:
        type: integer
      role:
        type: string
    type: object
  entities.UserStatus:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a ComSci Event API.
  title: ComSci Event API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          properties:
            email:
              type: string
            password:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Login a user
      tags:
      - User
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Clear the JWT cookie and log out the user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Logout a user
      tags:
      - User
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - User
  /calendar:
    get:
      consumes:
      - application/json
      description: Get all event details, sorted by start date
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.CalendarResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Retrieve event calendar
      tags:
      - Calendar
  /event:
    post:
      consumes:
      - application/json
      description: Create a new event with the provided details
      parameters:
      - description: Event object
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/entities.Event'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entities.Event'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new event
      tags:
      - Event
  /event/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete an event
      tags:
      - Event
    get:
      consumes:
      - application/json
      description: Retrieve an event by its ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Event'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get an event by ID
      tags:
      - Event
    put:
      consumes:
      - application/json
      description: Update an existing event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated event object
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/entities.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an event
      tags:
      - Event
  /events:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Event'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all events
      tags:
      - Event
  /instructor:
    post:
      consumes:
      - application/json
      description: Create a new instructor with the provided details
      parameters:
      - description: Instructor object
        in: body
        name: instructor
        required: true
        schema:
          $ref: '#/definitions/entities.Instructor'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new instructor
      tags:
      - Instructor
  /instructor/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an instructor by ID
      parameters:
      - description: Instructor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete an instructor
      tags:
      - Instructor
    get:
      consumes:
      - application/json
      description: Retrieve an instructor by its ID
      parameters:
      - description: Instructor ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Instructor'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get an instructor by ID
      tags:
      - Instructor
    put:
      consumes:
      - application/json
      description: Update an existing instructor by ID
      parameters:
      - description: Instructor ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated instructor object
        in: body
        name: instructor
        required: true
        schema:
          $ref: '#/definitions/entities.Instructor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an instructor
      tags:
      - Instructor
  /instructors:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all instructors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Instructor'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all instructors
      tags:
      - Instructor
  /notifications/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a notification by its ID
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a notification
      tags:
      - Notification
  /notifications/{id}/inactive:
    patch:
      consumes:
      - application/json
      description: Deactivate a notification by setting its active status to false
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Deactivate a notification
      tags:
      - Notification
  /notifications/user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve all notifications for a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Notification'
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get notifications by user ID
      tags:
      - Notification
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Retrieve a user by its ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.User'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update an existing user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated user object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - User
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
